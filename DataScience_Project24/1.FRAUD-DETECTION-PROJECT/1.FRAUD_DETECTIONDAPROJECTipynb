{"cells":[{"cell_type":"markdown","metadata":{"id":"eKMXqJd3A3Ah"},"source":["# **BUISNESS CASE:**\n","This case requires trainees to develop a model for predicting fraudulent transactions for a\n","financial company and use insights from the model to develop an actionable plan. Data for the\n","case is available in CSV format having 6362620 rows and 10 columns."]},{"cell_type":"code","execution_count":1,"metadata":{"id":"WF-Gx988BDAF","executionInfo":{"status":"ok","timestamp":1720676171928,"user_tz":-330,"elapsed":1901,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["#Load important libraries\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","metadata":{"id":"C8i12a02C5sw"},"source":["## **1.LOAD DATASET**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7FLIT0vMCMMG"},"outputs":[],"source":["#Laod dataset"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"r45gOpJxAmRj","executionInfo":{"status":"ok","timestamp":1720676380671,"user_tz":-330,"elapsed":626,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["path=r'/content/drive/MyDrive/IMP1DATAANLYST INTERVIEW2024/5.PROJECT DA/1.FRAUD DETECTION TASKINTERNSHIP1/Fraud.csv'"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":21684,"status":"ok","timestamp":1720676404743,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"g2q3zWOECMFB","outputId":"131f298e-91bb-42a4-95d5-1339f5ec3272"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   step      type    amount     nameOrig  oldbalanceOrg  newbalanceOrig  \\\n","0     1   PAYMENT   9839.64  C1231006815       170136.0       160296.36   \n","1     1   PAYMENT   1864.28  C1666544295        21249.0        19384.72   \n","2     1  TRANSFER    181.00  C1305486145          181.0            0.00   \n","3     1  CASH_OUT    181.00   C840083671          181.0            0.00   \n","4     1   PAYMENT  11668.14  C2048537720        41554.0        29885.86   \n","\n","      nameDest  oldbalanceDest  newbalanceDest  isFraud  isFlaggedFraud  \n","0  M1979787155             0.0             0.0        0               0  \n","1  M2044282225             0.0             0.0        0               0  \n","2   C553264065             0.0             0.0        1               0  \n","3    C38997010         21182.0             0.0        1               0  \n","4  M1230701703             0.0             0.0        0               0  "],"text/html":["\n","  <div id=\"df-4f3ddca2-52c1-4b31-99da-4b03c824bc47\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>step</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>nameOrig</th>\n","      <th>oldbalanceOrg</th>\n","      <th>newbalanceOrig</th>\n","      <th>nameDest</th>\n","      <th>oldbalanceDest</th>\n","      <th>newbalanceDest</th>\n","      <th>isFraud</th>\n","      <th>isFlaggedFraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>PAYMENT</td>\n","      <td>9839.64</td>\n","      <td>C1231006815</td>\n","      <td>170136.0</td>\n","      <td>160296.36</td>\n","      <td>M1979787155</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>PAYMENT</td>\n","      <td>1864.28</td>\n","      <td>C1666544295</td>\n","      <td>21249.0</td>\n","      <td>19384.72</td>\n","      <td>M2044282225</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>TRANSFER</td>\n","      <td>181.00</td>\n","      <td>C1305486145</td>\n","      <td>181.0</td>\n","      <td>0.00</td>\n","      <td>C553264065</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>CASH_OUT</td>\n","      <td>181.00</td>\n","      <td>C840083671</td>\n","      <td>181.0</td>\n","      <td>0.00</td>\n","      <td>C38997010</td>\n","      <td>21182.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>PAYMENT</td>\n","      <td>11668.14</td>\n","      <td>C2048537720</td>\n","      <td>41554.0</td>\n","      <td>29885.86</td>\n","      <td>M1230701703</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f3ddca2-52c1-4b31-99da-4b03c824bc47')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f3ddca2-52c1-4b31-99da-4b03c824bc47 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f3ddca2-52c1-4b31-99da-4b03c824bc47');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-65d0aa63-f4b1-42c3-a03b-caf91b3ac6b1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65d0aa63-f4b1-42c3-a03b-caf91b3ac6b1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-65d0aa63-f4b1-42c3-a03b-caf91b3ac6b1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}],"source":["df=pd.read_csv(path)\n","df.head()"]},{"cell_type":"markdown","metadata":{"id":"QXv6c9CqHCG1"},"source":["## **2.UNDERSTAND THE DATA**"]},{"cell_type":"markdown","metadata":{"id":"8dHHfFpDDLZN"},"source":["- step: unit of time (1 hour)\n","- type: type of transaction (CASH-IN, CASH-OUT, DEBIT, PAYMENT, TRANSFER)\n","- amount: transaction amount\n","- nameOrig: customer initiating the transaction\n","- oldbalanceOrg: initial balance before transaction\n","- newbalanceOrig: balance after transaction\n","- nameDest: customer receiving the transaction\n","- oldbalanceDest: initial balance of recipient before transaction\n","- newbalanceDest: balance of recipient after transaction\n","- isFraud - This is the transactions made by the fraudulent agents inside the simulation. In this specific dataset the fraudulent behavior of the agents aims to profit by taking control or customers accounts and try to empty the funds by transferring to another account and then cashing out of the system.\n","\n","- isFlaggedFraud - The business model aims to control massive transfers from one account to another and flags illegal attempts. An illegal attempt in this dataset is an attempt to transfer more than 200.000 in a single transaction.**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":103,"status":"ok","timestamp":1720629027016,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"3mMWFogODEOV","outputId":"cb5a1b20-dfc7-45ad-e4f1-1f2fab7aa16b"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"step\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 743,\n        \"max\": 743,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          743\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"TRANSFER\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3091534.888220482,\n        \"min\": 339682.13,\n        \"max\": 6311409.28,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          339682.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nameOrig\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"C1529008245\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldbalanceOrg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3091534.888220482,\n        \"min\": 339682.13,\n        \"max\": 6311409.28,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          339682.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"newbalanceOrig\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nameDest\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"C1881841831\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldbalanceDest\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2903898.984987697,\n        \"min\": 0.0,\n        \"max\": 6510099.11,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"newbalanceDest\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3719613.2707336065,\n        \"min\": 0.0,\n        \"max\": 7360101.63,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isFraud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isFlaggedFraud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-a8acc9a2-85db-4e75-a9f3-5d04285f790d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>step</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>nameOrig</th>\n","      <th>oldbalanceOrg</th>\n","      <th>newbalanceOrig</th>\n","      <th>nameDest</th>\n","      <th>oldbalanceDest</th>\n","      <th>newbalanceDest</th>\n","      <th>isFraud</th>\n","      <th>isFlaggedFraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6362615</th>\n","      <td>743</td>\n","      <td>CASH_OUT</td>\n","      <td>339682.13</td>\n","      <td>C786484425</td>\n","      <td>339682.13</td>\n","      <td>0.0</td>\n","      <td>C776919290</td>\n","      <td>0.00</td>\n","      <td>339682.13</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6362616</th>\n","      <td>743</td>\n","      <td>TRANSFER</td>\n","      <td>6311409.28</td>\n","      <td>C1529008245</td>\n","      <td>6311409.28</td>\n","      <td>0.0</td>\n","      <td>C1881841831</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6362617</th>\n","      <td>743</td>\n","      <td>CASH_OUT</td>\n","      <td>6311409.28</td>\n","      <td>C1162922333</td>\n","      <td>6311409.28</td>\n","      <td>0.0</td>\n","      <td>C1365125890</td>\n","      <td>68488.84</td>\n","      <td>6379898.11</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6362618</th>\n","      <td>743</td>\n","      <td>TRANSFER</td>\n","      <td>850002.52</td>\n","      <td>C1685995037</td>\n","      <td>850002.52</td>\n","      <td>0.0</td>\n","      <td>C2080388513</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6362619</th>\n","      <td>743</td>\n","      <td>CASH_OUT</td>\n","      <td>850002.52</td>\n","      <td>C1280323807</td>\n","      <td>850002.52</td>\n","      <td>0.0</td>\n","      <td>C873221189</td>\n","      <td>6510099.11</td>\n","      <td>7360101.63</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8acc9a2-85db-4e75-a9f3-5d04285f790d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8acc9a2-85db-4e75-a9f3-5d04285f790d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8acc9a2-85db-4e75-a9f3-5d04285f790d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4defe77f-e224-48ce-9fa5-11a3a3a476cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4defe77f-e224-48ce-9fa5-11a3a3a476cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4defe77f-e224-48ce-9fa5-11a3a3a476cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["         step      type      amount     nameOrig  oldbalanceOrg  \\\n","6362615   743  CASH_OUT   339682.13   C786484425      339682.13   \n","6362616   743  TRANSFER  6311409.28  C1529008245     6311409.28   \n","6362617   743  CASH_OUT  6311409.28  C1162922333     6311409.28   \n","6362618   743  TRANSFER   850002.52  C1685995037      850002.52   \n","6362619   743  CASH_OUT   850002.52  C1280323807      850002.52   \n","\n","         newbalanceOrig     nameDest  oldbalanceDest  newbalanceDest  isFraud  \\\n","6362615             0.0   C776919290            0.00       339682.13        1   \n","6362616             0.0  C1881841831            0.00            0.00        1   \n","6362617             0.0  C1365125890        68488.84      6379898.11        1   \n","6362618             0.0  C2080388513            0.00            0.00        1   \n","6362619             0.0   C873221189      6510099.11      7360101.63        1   \n","\n","         isFlaggedFraud  \n","6362615               0  \n","6362616               0  \n","6362617               0  \n","6362618               0  \n","6362619               0  "]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df.tail()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":91,"status":"ok","timestamp":1720629027019,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"RUM66AvoEU9h","outputId":"32d6be30-235b-41da-c6c0-c7768b4b0d5b"},"outputs":[{"name":"stdout","output_type":"stream","text":["step                int64\n","type               object\n","amount            float64\n","nameOrig           object\n","oldbalanceOrg     float64\n","newbalanceOrig    float64\n","nameDest           object\n","oldbalanceDest    float64\n","newbalanceDest    float64\n","isFraud             int64\n","isFlaggedFraud      int64\n","dtype: object\n"]}],"source":["# Check data types\n","print(df.dtypes)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":75,"status":"ok","timestamp":1720629027021,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"mxPY2MeIEVEb","outputId":"ae1aac84-aad7-4ba6-fa62-260236207f40"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 6362620.0,\n        \"max\": 6362620.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6362620.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 530706.7510235239,\n        \"min\": 2.51468734577894e-06,\n        \"max\": 1224996.3982019299,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          179861.90354913071\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1671788.2969147025,\n        \"min\": 0.001585774705736547,\n        \"max\": 3674128.9421196356,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          603858.2314629358\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3535533905932738,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4726.36393702975,\n        \"min\": 0.0,\n        \"max\": 13389.57,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          156.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80765.28726864891,\n        \"min\": 0.0,\n        \"max\": 214661.44,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          239.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 448893.38153697713,\n        \"min\": 0.0,\n        \"max\": 1111909.25,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          335.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 152963480.4169497,\n        \"min\": 1.0,\n        \"max\": 356179278.92,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          743.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-9f30b6ec-a586-4e5e-a46c-5a55fa5872e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>step</th>\n","      <td>6362620.0</td>\n","      <td>2.433972e+02</td>\n","      <td>1.423320e+02</td>\n","      <td>1.0</td>\n","      <td>156.00</td>\n","      <td>239.000</td>\n","      <td>3.350000e+02</td>\n","      <td>7.430000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>amount</th>\n","      <td>6362620.0</td>\n","      <td>1.798619e+05</td>\n","      <td>6.038582e+05</td>\n","      <td>0.0</td>\n","      <td>13389.57</td>\n","      <td>74871.940</td>\n","      <td>2.087215e+05</td>\n","      <td>9.244552e+07</td>\n","    </tr>\n","    <tr>\n","      <th>oldbalanceOrg</th>\n","      <td>6362620.0</td>\n","      <td>8.338831e+05</td>\n","      <td>2.888243e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>14208.000</td>\n","      <td>1.073152e+05</td>\n","      <td>5.958504e+07</td>\n","    </tr>\n","    <tr>\n","      <th>newbalanceOrig</th>\n","      <td>6362620.0</td>\n","      <td>8.551137e+05</td>\n","      <td>2.924049e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.000</td>\n","      <td>1.442584e+05</td>\n","      <td>4.958504e+07</td>\n","    </tr>\n","    <tr>\n","      <th>oldbalanceDest</th>\n","      <td>6362620.0</td>\n","      <td>1.100702e+06</td>\n","      <td>3.399180e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>132705.665</td>\n","      <td>9.430367e+05</td>\n","      <td>3.560159e+08</td>\n","    </tr>\n","    <tr>\n","      <th>newbalanceDest</th>\n","      <td>6362620.0</td>\n","      <td>1.224996e+06</td>\n","      <td>3.674129e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>214661.440</td>\n","      <td>1.111909e+06</td>\n","      <td>3.561793e+08</td>\n","    </tr>\n","    <tr>\n","      <th>isFraud</th>\n","      <td>6362620.0</td>\n","      <td>1.290820e-03</td>\n","      <td>3.590480e-02</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>isFlaggedFraud</th>\n","      <td>6362620.0</td>\n","      <td>2.514687e-06</td>\n","      <td>1.585775e-03</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f30b6ec-a586-4e5e-a46c-5a55fa5872e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f30b6ec-a586-4e5e-a46c-5a55fa5872e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f30b6ec-a586-4e5e-a46c-5a55fa5872e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73753638-2fb2-4dbf-a213-57f0900cee4d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73753638-2fb2-4dbf-a213-57f0900cee4d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73753638-2fb2-4dbf-a213-57f0900cee4d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["                    count          mean           std  min       25%  \\\n","step            6362620.0  2.433972e+02  1.423320e+02  1.0    156.00   \n","amount          6362620.0  1.798619e+05  6.038582e+05  0.0  13389.57   \n","oldbalanceOrg   6362620.0  8.338831e+05  2.888243e+06  0.0      0.00   \n","newbalanceOrig  6362620.0  8.551137e+05  2.924049e+06  0.0      0.00   \n","oldbalanceDest  6362620.0  1.100702e+06  3.399180e+06  0.0      0.00   \n","newbalanceDest  6362620.0  1.224996e+06  3.674129e+06  0.0      0.00   \n","isFraud         6362620.0  1.290820e-03  3.590480e-02  0.0      0.00   \n","isFlaggedFraud  6362620.0  2.514687e-06  1.585775e-03  0.0      0.00   \n","\n","                       50%           75%           max  \n","step               239.000  3.350000e+02  7.430000e+02  \n","amount           74871.940  2.087215e+05  9.244552e+07  \n","oldbalanceOrg    14208.000  1.073152e+05  5.958504e+07  \n","newbalanceOrig       0.000  1.442584e+05  4.958504e+07  \n","oldbalanceDest  132705.665  9.430367e+05  3.560159e+08  \n","newbalanceDest  214661.440  1.111909e+06  3.561793e+08  \n","isFraud              0.000  0.000000e+00  1.000000e+00  \n","isFlaggedFraud       0.000  0.000000e+00  1.000000e+00  "]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["df.describe().T #stastistics of the numerical features"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":71,"status":"ok","timestamp":1720629027022,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"VSvCsHhpEVKL","outputId":"db9ad820-acd9-43ed-d6f8-78a42bd49173"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6362620 entries, 0 to 6362619\n","Data columns (total 11 columns):\n"," #   Column          Dtype  \n","---  ------          -----  \n"," 0   step            int64  \n"," 1   type            object \n"," 2   amount          float64\n"," 3   nameOrig        object \n"," 4   oldbalanceOrg   float64\n"," 5   newbalanceOrig  float64\n"," 6   nameDest        object \n"," 7   oldbalanceDest  float64\n"," 8   newbalanceDest  float64\n"," 9   isFraud         int64  \n"," 10  isFlaggedFraud  int64  \n","dtypes: float64(5), int64(3), object(3)\n","memory usage: 534.0+ MB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3732,"status":"ok","timestamp":1720676408461,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"xpdw-rcmFeDA","outputId":"be7fdbad-6beb-4109-e5ce-92431fee4cfe"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["step              0\n","type              0\n","amount            0\n","nameOrig          0\n","oldbalanceOrg     0\n","newbalanceOrig    0\n","nameDest          0\n","oldbalanceDest    0\n","newbalanceDest    0\n","isFraud           0\n","isFlaggedFraud    0\n","dtype: int64"]},"metadata":{},"execution_count":4}],"source":["df.isnull().sum() # no missing values"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16611,"status":"ok","timestamp":1720629043585,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"Y2TrVTgHFvQb","outputId":"93be446d-9f94-4a45-d25c-9f841b29e62f"},"outputs":[{"name":"stdout","output_type":"stream","text":["0\n"]}],"source":["# Check for duplicates\n","print(df.duplicated().sum())\n","#Ensure there are no duplicate rows in the dataset."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":957},"executionInfo":{"elapsed":57193,"status":"ok","timestamp":1720629100743,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"TQfezGpgFvXR","outputId":"b31ddf1b-580b-4ec9-fd1b-0ead85196b7f"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1000x500 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 1000x500 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Plot distribution of transaction types\n","plt.figure(figsize=(10, 5))\n","sns.countplot(x='type', data=df)\n","plt.title('Transaction Types Distribution')\n","plt.show()\n","\n","# Plot distribution of transaction amounts\n","plt.figure(figsize=(10, 5))\n","sns.histplot(df['amount'], bins=50, kde=True)\n","plt.title('Transaction Amount Distribution')\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"elapsed":13424,"status":"ok","timestamp":1720629114146,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"Vu0fjvAkGBqC","outputId":"6b28d3f5-4d60-4046-b308-fe2b8f9b2af4"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"2237500\",\n          \"6362620\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nameOrig\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6353307,\n          \"3\",\n          \"6362620\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nameDest\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2722362,\n          \"113\",\n          \"6362620\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-ccdf8573-86c9-498d-afa2-dd4f866ff594\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>type</th>\n","      <th>nameOrig</th>\n","      <th>nameDest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>6362620</td>\n","      <td>6362620</td>\n","      <td>6362620</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>5</td>\n","      <td>6353307</td>\n","      <td>2722362</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>CASH_OUT</td>\n","      <td>C1902386530</td>\n","      <td>C1286084959</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>2237500</td>\n","      <td>3</td>\n","      <td>113</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccdf8573-86c9-498d-afa2-dd4f866ff594')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ccdf8573-86c9-498d-afa2-dd4f866ff594 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ccdf8573-86c9-498d-afa2-dd4f866ff594');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-95f922bf-0a46-4262-a5cf-2896f5dddd8b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95f922bf-0a46-4262-a5cf-2896f5dddd8b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-95f922bf-0a46-4262-a5cf-2896f5dddd8b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["            type     nameOrig     nameDest\n","count    6362620      6362620      6362620\n","unique         5      6353307      2722362\n","top     CASH_OUT  C1902386530  C1286084959\n","freq     2237500            3          113"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["df.describe(include='O')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"executionInfo":{"elapsed":12143,"status":"ok","timestamp":1720629126272,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"AhaVJ7kHGs22","outputId":"2ce7dce4-4456-49f4-8afa-91c519f9429c"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["import seaborn as sns\n","\n","# Count plot of the isFraud column\n","sns.countplot(x='isFraud', data=df)\n","plt.title('Distribution of Fraudulent vs Non-Fraudulent Transactions')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":51,"status":"ok","timestamp":1720629126274,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"a21Cqi1yHOBr","outputId":"d74cca47-7822-4e29-926d-0f2c9ff0e6cd"},"outputs":[{"data":{"text/plain":["isFraud\n","0    6354407\n","1       8213\n","Name: count, dtype: int64"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["df['isFraud'].value_counts()"]},{"cell_type":"markdown","metadata":{"id":"jNa0TuXcHwuy"},"source":["**INSIGHTS:**\n","- Here target variables imbalceddataset\n","- 0: Non-fraudulent transactions\n","- 1:Fraudulent transactions"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":33,"status":"ok","timestamp":1720629126277,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"kKCaIcRDIHha","outputId":"9b673007-5a51-465f-f5dc-04ea798f6fd2"},"outputs":[{"name":"stdout","output_type":"stream","text":["Percentage of Fraudulent Transactions: 0.13%\n"]}],"source":["fraud_percentage = (8213 / 6362620) * 100\n","print(f\"Percentage of Fraudulent Transactions: {fraud_percentage:.2f}%\")\n","#0.13%"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"yNUOAdt-KDw8","executionInfo":{"status":"ok","timestamp":1720676418066,"user_tz":-330,"elapsed":606,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["#seperate numerical and categoricalfeatures:\n","num_cols=df.select_dtypes(include=['int64','float64']).columns\n","cat_cols=df.select_dtypes(include=['object']).columns\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1720676418700,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"M16sX0GMKrNO","outputId":"2c7e95e5-ea30-4e06-c145-182574911661"},"outputs":[{"output_type":"stream","name":"stdout","text":["numerical columns Index(['step', 'amount', 'oldbalanceOrg', 'newbalanceOrig', 'oldbalanceDest',\n","       'newbalanceDest', 'isFraud', 'isFlaggedFraud'],\n","      dtype='object') 8\n","categorical columns Index(['type', 'nameOrig', 'nameDest'], dtype='object') 3\n"]}],"source":["print(\"numerical columns\",num_cols,len(num_cols))\n","\n","print(\"categorical columns\",cat_cols,len(cat_cols))"]},{"cell_type":"markdown","metadata":{"id":"QrWFN2QpJTg4"},"source":["### **Check mulicolinearity:**"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"0SUpY2V1Izom","executionInfo":{"status":"ok","timestamp":1720676427183,"user_tz":-330,"elapsed":2861,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Select only numerical columns\n","numeric_df = df[num_cols]\n","correlation_matrix = numeric_df.corr()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":44,"status":"ok","timestamp":1720629128292,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"byI1kVbWLpCn","outputId":"ee1ad254-dda3-4040-d6bc-fd516c08ab6a"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"correlation_matrix\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"step\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3493919527932923,\n        \"min\": -0.010299036979071072,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.02237299467458584,\n          0.0258881756526783,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35341885029729864,\n        \"min\": -0.007860925286480084,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          0.45930426729324914,\n          0.02237299467458584\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldbalanceOrg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4548787152786935,\n        \"min\": -0.010058378359069588,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.0027624747580919174,\n          0.0420286187570202,\n          -0.010058378359069588\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"newbalanceOrig\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4567465098940297,\n        \"min\": -0.010299036979071072,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.007860925286480084,\n          0.041837497145393955,\n          -0.010299036979071072\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oldbalanceDest\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4333077132353405,\n        \"min\": -0.0058852782280514205,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2941374500176812,\n          0.9765685054474923,\n          0.027665359552434342\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"newbalanceDest\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.44058445551228914,\n        \"min\": -0.0005287166614055838,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.45930426729324914,\n          1.0,\n          0.0258881756526783\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isFraud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3472327599060102,\n        \"min\": -0.00814816126757076,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.07668842884028577,\n          0.0005353470683180126,\n          0.03157756863269019\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isFlaggedFraud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35051513129623346,\n        \"min\": -0.0005287166614055838,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.012294602501427375,\n          -0.0005287166614055838,\n          0.0032774153923360704\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"correlation_matrix"},"text/html":["\n","  <div id=\"df-9dbcffec-8d7e-4f7d-8aa0-a8cab20c3969\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>step</th>\n","      <th>amount</th>\n","      <th>oldbalanceOrg</th>\n","      <th>newbalanceOrig</th>\n","      <th>oldbalanceDest</th>\n","      <th>newbalanceDest</th>\n","      <th>isFraud</th>\n","      <th>isFlaggedFraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>step</th>\n","      <td>1.000000</td>\n","      <td>0.022373</td>\n","      <td>-0.010058</td>\n","      <td>-0.010299</td>\n","      <td>0.027665</td>\n","      <td>0.025888</td>\n","      <td>0.031578</td>\n","      <td>0.003277</td>\n","    </tr>\n","    <tr>\n","      <th>amount</th>\n","      <td>0.022373</td>\n","      <td>1.000000</td>\n","      <td>-0.002762</td>\n","      <td>-0.007861</td>\n","      <td>0.294137</td>\n","      <td>0.459304</td>\n","      <td>0.076688</td>\n","      <td>0.012295</td>\n","    </tr>\n","    <tr>\n","      <th>oldbalanceOrg</th>\n","      <td>-0.010058</td>\n","      <td>-0.002762</td>\n","      <td>1.000000</td>\n","      <td>0.998803</td>\n","      <td>0.066243</td>\n","      <td>0.042029</td>\n","      <td>0.010154</td>\n","      <td>0.003835</td>\n","    </tr>\n","    <tr>\n","      <th>newbalanceOrig</th>\n","      <td>-0.010299</td>\n","      <td>-0.007861</td>\n","      <td>0.998803</td>\n","      <td>1.000000</td>\n","      <td>0.067812</td>\n","      <td>0.041837</td>\n","      <td>-0.008148</td>\n","      <td>0.003776</td>\n","    </tr>\n","    <tr>\n","      <th>oldbalanceDest</th>\n","      <td>0.027665</td>\n","      <td>0.294137</td>\n","      <td>0.066243</td>\n","      <td>0.067812</td>\n","      <td>1.000000</td>\n","      <td>0.976569</td>\n","      <td>-0.005885</td>\n","      <td>-0.000513</td>\n","    </tr>\n","    <tr>\n","      <th>newbalanceDest</th>\n","      <td>0.025888</td>\n","      <td>0.459304</td>\n","      <td>0.042029</td>\n","      <td>0.041837</td>\n","      <td>0.976569</td>\n","      <td>1.000000</td>\n","      <td>0.000535</td>\n","      <td>-0.000529</td>\n","    </tr>\n","    <tr>\n","      <th>isFraud</th>\n","      <td>0.031578</td>\n","      <td>0.076688</td>\n","      <td>0.010154</td>\n","      <td>-0.008148</td>\n","      <td>-0.005885</td>\n","      <td>0.000535</td>\n","      <td>1.000000</td>\n","      <td>0.044109</td>\n","    </tr>\n","    <tr>\n","      <th>isFlaggedFraud</th>\n","      <td>0.003277</td>\n","      <td>0.012295</td>\n","      <td>0.003835</td>\n","      <td>0.003776</td>\n","      <td>-0.000513</td>\n","      <td>-0.000529</td>\n","      <td>0.044109</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dbcffec-8d7e-4f7d-8aa0-a8cab20c3969')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9dbcffec-8d7e-4f7d-8aa0-a8cab20c3969 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9dbcffec-8d7e-4f7d-8aa0-a8cab20c3969');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eb2a609a-2d37-453e-bbc1-7db41ba4e08e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb2a609a-2d37-453e-bbc1-7db41ba4e08e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eb2a609a-2d37-453e-bbc1-7db41ba4e08e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a7f6e3d9-23c7-4d5d-b94c-a1221c85147f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('correlation_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a7f6e3d9-23c7-4d5d-b94c-a1221c85147f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('correlation_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["                    step    amount  oldbalanceOrg  newbalanceOrig  \\\n","step            1.000000  0.022373      -0.010058       -0.010299   \n","amount          0.022373  1.000000      -0.002762       -0.007861   \n","oldbalanceOrg  -0.010058 -0.002762       1.000000        0.998803   \n","newbalanceOrig -0.010299 -0.007861       0.998803        1.000000   \n","oldbalanceDest  0.027665  0.294137       0.066243        0.067812   \n","newbalanceDest  0.025888  0.459304       0.042029        0.041837   \n","isFraud         0.031578  0.076688       0.010154       -0.008148   \n","isFlaggedFraud  0.003277  0.012295       0.003835        0.003776   \n","\n","                oldbalanceDest  newbalanceDest   isFraud  isFlaggedFraud  \n","step                  0.027665        0.025888  0.031578        0.003277  \n","amount                0.294137        0.459304  0.076688        0.012295  \n","oldbalanceOrg         0.066243        0.042029  0.010154        0.003835  \n","newbalanceOrig        0.067812        0.041837 -0.008148        0.003776  \n","oldbalanceDest        1.000000        0.976569 -0.005885       -0.000513  \n","newbalanceDest        0.976569        1.000000  0.000535       -0.000529  \n","isFraud              -0.005885        0.000535  1.000000        0.044109  \n","isFlaggedFraud       -0.000513       -0.000529  0.044109        1.000000  "]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["correlation_matrix"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":954},"executionInfo":{"elapsed":1243,"status":"ok","timestamp":1720676438975,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"3StO-YMvLdTC","outputId":"d260d570-37ff-44af-959b-687572f17a5c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize=(12, 10))\n","sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')\n","plt.title('Correlation Matrix of Numerical Columns')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"uyLeXNZTMJBh"},"source":["### **INSIGHTS FROM HEATMAP:**\n","- step- shows very low correlations with other numerical variables, indicating it does not have a significant relationship with transaction characteristics or fraud indicators in this dataset.\n","- oldbalanceOrg and newbalanceOrig are highly positively correlated (0.999)\n","- oldbalanceDest and newbalanceDest are also highly correlated (0.977)\n","- isFlaggedFraud has a low positive correlation with amount (0.012) and other balance variables, showing that flagged fraud is not strongly related to transaction amount or account balances\n","- But he isFlaggedFraud feature is crucial because it indicates transactions already flagged as suspicious, helping the model focus on high-risk transactions. Including it enhances the model's accuracy by leveraging pre-existing fraud detection criteria."]},{"cell_type":"markdown","metadata":{"id":"q8qW6zEONpUt"},"source":["- oldbalanceOrg and newbalanceOrig:oldbalanceOrg and newbalanceOrig:"]},{"cell_type":"markdown","metadata":{"id":"dAU50-BuN-Pc"},"source":["### **DROPPING SOME IRRELEVANT FEATURES OR STRONGLY CORRELATED FEATURES:**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0tX-JTZDNoql"},"outputs":[],"source":["# Drop oldbalanceOrig (keeping newbalanceOrig).\n","# Drop oldbalanceDest (keeping newbalanceDest).\n"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"6lhSsDtPOXvj","executionInfo":{"status":"ok","timestamp":1720676514348,"user_tz":-330,"elapsed":610,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Drop redundant and less useful features\n","\n","df_num_reduced = numeric_df.drop(columns=['oldbalanceOrg', 'oldbalanceDest', 'step'])\n","# isFlaggedFraud : imprtant featureso not drop"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":608,"status":"ok","timestamp":1720676519226,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"A3h-3jfdN91Y","outputId":"04e6e1e3-999b-4342-bfce-10de17d37ae5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['amount', 'newbalanceOrig', 'newbalanceDest', 'isFraud',\n","       'isFlaggedFraud'],\n","      dtype='object')\n"]}],"source":["print(df_num_reduced.columns)"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"yWd12P-9PrK8","executionInfo":{"status":"ok","timestamp":1720676519833,"user_tz":-330,"elapsed":12,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["df_cat=df[cat_cols]"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"SpiQHRBzHpcZ","executionInfo":{"status":"ok","timestamp":1720676522028,"user_tz":-330,"elapsed":18,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# # Combine numerical and categorical DataFrames\n","df_final = pd.concat([df_num_reduced, df_cat], axis=1)\n"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1720676523521,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"ouQMYgpAP201","outputId":"6c23860f-7f1f-473b-ea1a-139d825ecbe3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     amount  newbalanceOrig  newbalanceDest  isFraud  isFlaggedFraud  \\\n","0   9839.64       160296.36             0.0        0               0   \n","1   1864.28        19384.72             0.0        0               0   \n","2    181.00            0.00             0.0        1               0   \n","3    181.00            0.00             0.0        1               0   \n","4  11668.14        29885.86             0.0        0               0   \n","\n","       type     nameOrig     nameDest  \n","0   PAYMENT  C1231006815  M1979787155  \n","1   PAYMENT  C1666544295  M2044282225  \n","2  TRANSFER  C1305486145   C553264065  \n","3  CASH_OUT   C840083671    C38997010  \n","4   PAYMENT  C2048537720  M1230701703  "],"text/html":["\n","  <div id=\"df-99f0ac12-b60f-42f6-90b5-078184b86e7e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>amount</th>\n","      <th>newbalanceOrig</th>\n","      <th>newbalanceDest</th>\n","      <th>isFraud</th>\n","      <th>isFlaggedFraud</th>\n","      <th>type</th>\n","      <th>nameOrig</th>\n","      <th>nameDest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9839.64</td>\n","      <td>160296.36</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PAYMENT</td>\n","      <td>C1231006815</td>\n","      <td>M1979787155</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1864.28</td>\n","      <td>19384.72</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PAYMENT</td>\n","      <td>C1666544295</td>\n","      <td>M2044282225</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>181.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>TRANSFER</td>\n","      <td>C1305486145</td>\n","      <td>C553264065</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>181.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>CASH_OUT</td>\n","      <td>C840083671</td>\n","      <td>C38997010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11668.14</td>\n","      <td>29885.86</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PAYMENT</td>\n","      <td>C2048537720</td>\n","      <td>M1230701703</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99f0ac12-b60f-42f6-90b5-078184b86e7e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-99f0ac12-b60f-42f6-90b5-078184b86e7e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-99f0ac12-b60f-42f6-90b5-078184b86e7e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b2db9a5-b3d5-4574-99e3-34c6ef68da16\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b2db9a5-b3d5-4574-99e3-34c6ef68da16')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b2db9a5-b3d5-4574-99e3-34c6ef68da16 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_final"}},"metadata":{},"execution_count":13}],"source":["df_final.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":50,"status":"ok","timestamp":1720629130430,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"},"user_tz":-330},"id":"Z97t8pvmQBg6","outputId":"7b8566fc-f0f3-4ffa-a7f9-739161e69410"},"outputs":[{"data":{"text/plain":["(6362620, 8)"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["df_final.shape"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"NM41hmn6TxuY","outputId":"c3a379f5-022b-4dd9-d6fa-68fe32ffb517","executionInfo":{"status":"ok","timestamp":1720676599984,"user_tz":-330,"elapsed":70709,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 5 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# List of numerical columns\n","numerical_cols = df_final.select_dtypes(include=['int64', 'float64']).columns\n","\n","# Plotting box plots for each numerical column\n","plt.figure(figsize=(15, 10))\n","for i, col in enumerate(numerical_cols, 1):\n","    plt.subplot(3, 3, i)  # Adjust the grid size as needed\n","    sns.boxplot(x=df_final[col])\n","    plt.title(f'Boxplot of {col}')\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"_nKv9dZrRV9N","executionInfo":{"status":"ok","timestamp":1720676683210,"user_tz":-330,"elapsed":770,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["df_p = df_final.copy()\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"VDAUbwL1UaNS","executionInfo":{"status":"ok","timestamp":1720676683848,"user_tz":-330,"elapsed":9,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Function to remove outliers based on IQR\n","def remove_outliers(df, column):\n","    Q1 = df[column].quantile(0.25)\n","    Q3 = df[column].quantile(0.75)\n","    IQR = Q3 - Q1\n","    # Return DataFrame with outliers removed\n","    return df[~((df[column] < (Q1 - 1.5 * IQR)) | (df[column] > (Q3 + 1.5 * IQR)))]\n"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"sx8d-RNjUlTp","executionInfo":{"status":"ok","timestamp":1720676698259,"user_tz":-330,"elapsed":3892,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Apply outlier removal for each numerical column\n","for col in numerical_cols:\n","    df_processed = remove_outliers(df_p, col)\n"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Pp7s8btDVNME","outputId":"b11cb13d-4fc8-43dc-9ead-32ba491c1215","executionInfo":{"status":"ok","timestamp":1720676698261,"user_tz":-330,"elapsed":23,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     amount  newbalanceOrig  newbalanceDest  isFraud  isFlaggedFraud  \\\n","0   9839.64       160296.36             0.0        0               0   \n","1   1864.28        19384.72             0.0        0               0   \n","2    181.00            0.00             0.0        1               0   \n","3    181.00            0.00             0.0        1               0   \n","4  11668.14        29885.86             0.0        0               0   \n","\n","       type     nameOrig     nameDest  \n","0   PAYMENT  C1231006815  M1979787155  \n","1   PAYMENT  C1666544295  M2044282225  \n","2  TRANSFER  C1305486145   C553264065  \n","3  CASH_OUT   C840083671    C38997010  \n","4   PAYMENT  C2048537720  M1230701703  "],"text/html":["\n","  <div id=\"df-ac934334-1b56-46a8-b2e9-0aed457a05a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>amount</th>\n","      <th>newbalanceOrig</th>\n","      <th>newbalanceDest</th>\n","      <th>isFraud</th>\n","      <th>isFlaggedFraud</th>\n","      <th>type</th>\n","      <th>nameOrig</th>\n","      <th>nameDest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9839.64</td>\n","      <td>160296.36</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PAYMENT</td>\n","      <td>C1231006815</td>\n","      <td>M1979787155</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1864.28</td>\n","      <td>19384.72</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PAYMENT</td>\n","      <td>C1666544295</td>\n","      <td>M2044282225</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>181.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>TRANSFER</td>\n","      <td>C1305486145</td>\n","      <td>C553264065</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>181.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>CASH_OUT</td>\n","      <td>C840083671</td>\n","      <td>C38997010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11668.14</td>\n","      <td>29885.86</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PAYMENT</td>\n","      <td>C2048537720</td>\n","      <td>M1230701703</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac934334-1b56-46a8-b2e9-0aed457a05a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac934334-1b56-46a8-b2e9-0aed457a05a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac934334-1b56-46a8-b2e9-0aed457a05a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4538a4a5-6642-4700-b854-cbd9f8f75dcf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4538a4a5-6642-4700-b854-cbd9f8f75dcf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4538a4a5-6642-4700-b854-cbd9f8f75dcf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_processed"}},"metadata":{},"execution_count":18}],"source":["df_processed.head()"]},{"cell_type":"markdown","metadata":{"id":"6RpU3-f_VVy2"},"source":["### **5.FEATURE ENGINEERING:**\n","- Feature Engineering involves creating new features from the existing ones and selecting which features to include in the model based on their importance and relevance."]},{"cell_type":"code","execution_count":19,"metadata":{"id":"uE_OC51XVd7E","executionInfo":{"status":"ok","timestamp":1720676705579,"user_tz":-330,"elapsed":983,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Feature Engineering\n","df_processed['balanceChange'] = df_processed['newbalanceDest'] - df_processed['amount']\n","df_processed['transactionSize'] = df_processed['amount'] / (df_processed['newbalanceOrig'] + 1)  # Adding 1 to avoid division by zer"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"XR60findZCPd","executionInfo":{"status":"ok","timestamp":1720676707077,"user_tz":-330,"elapsed":845,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Drop original columns that are no longer needed\n","df_processed = df_processed.drop(columns=['isFlaggedFraud'])\n"]},{"cell_type":"markdown","metadata":{"id":"TbGH4Nc-ZJd5"},"source":["### **Sepearate X and y**"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"oOqwn3J3ZQCb","executionInfo":{"status":"ok","timestamp":1720676712514,"user_tz":-330,"elapsed":738,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Separate features and target\n","X = df_processed.drop('isFraud', axis=1)\n","y = df_processed['isFraud']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ga-mYh7nZU_Q","outputId":"878e3864-05ef-4b09-d93e-ca50bc59e75d"},"outputs":[{"data":{"text/plain":["(6362604, 8)"]},"execution_count":39,"metadata":{},"output_type":"execute_result"}],"source":["X.shape"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"PQtbpGh3ZdkF","executionInfo":{"status":"ok","timestamp":1720676714749,"user_tz":-330,"elapsed":12,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Define categorical and numerical columns\n","categorical_cols = ['type']\n","numerical_cols = ['amount', 'newbalanceOrig', 'newbalanceDest', 'balanceChange', 'transactionSize']"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"GJDvmW4mZrjU","executionInfo":{"status":"ok","timestamp":1720676720576,"user_tz":-330,"elapsed":682,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["from sklearn.preprocessing import OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.impute import SimpleImputer"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"FIl6niroZxpj","executionInfo":{"status":"ok","timestamp":1720676721386,"user_tz":-330,"elapsed":18,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Preprocessing pipeline for numerical features\n","numerical_pipeline = Pipeline([\n","    ('imputer', SimpleImputer(strategy='mean')),  # Handling missing values\n","])"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"uZJ_WCAuZ2Pa","executionInfo":{"status":"ok","timestamp":1720676721983,"user_tz":-330,"elapsed":18,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["categorical_pipeline = Pipeline([\n","    ('imputer', SimpleImputer(strategy='most_frequent')),  # Handling missing values\n","    ('onehot', OneHotEncoder(handle_unknown='ignore'))  # Encoding categorical features\n","])"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"sUerOaYfaWpg","executionInfo":{"status":"ok","timestamp":1720676728995,"user_tz":-330,"elapsed":708,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["#Combine preprocessing pipelines\n","preprocessor = ColumnTransformer(\n","    transformers=[\n","        ('num', numerical_pipeline, numerical_cols),\n","        ('cat', categorical_pipeline, categorical_cols)\n","    ])"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"nZNnLj74aD7R","executionInfo":{"status":"ok","timestamp":1720676735636,"user_tz":-330,"elapsed":5443,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Apply preprocessing\n","X_processed = preprocessor.fit_transform(X)"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uxkQjoE9alNw","outputId":"5ad5c689-4590-4aa6-f0de-6aaa3911bda0","executionInfo":{"status":"ok","timestamp":1720676735655,"user_tz":-330,"elapsed":43,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["          0          1    2         3           4    5    6    7    8    9\n","0   9839.64  160296.36  0.0  -9839.64    0.061384  0.0  0.0  0.0  1.0  0.0\n","1   1864.28   19384.72  0.0  -1864.28    0.096168  0.0  0.0  0.0  1.0  0.0\n","2    181.00       0.00  0.0   -181.00  181.000000  0.0  0.0  0.0  0.0  1.0\n","3    181.00       0.00  0.0   -181.00  181.000000  0.0  1.0  0.0  0.0  0.0\n","4  11668.14   29885.86  0.0 -11668.14    0.390410  0.0  0.0  0.0  1.0  0.0\n"]}],"source":["print(pd.DataFrame(X_processed).head())"]},{"cell_type":"markdown","metadata":{"id":"O4dFpNL9bHg1"},"source":["### **TRAIN TEST SPLIT**"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"5yHRGzNmZ-hH","executionInfo":{"status":"ok","timestamp":1720676739645,"user_tz":-330,"elapsed":1579,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import classification_report\n","from sklearn.linear_model import LogisticRegression\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X_processed, y, test_size=0.3, random_state=42)\n"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"Z_D9zFyBcpXQ","executionInfo":{"status":"ok","timestamp":1720676789443,"user_tz":-330,"elapsed":47873,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["# Initialize and train the Logistic Regression model\n","model1 = LogisticRegression(random_state=42)\n","model1.fit(X_train, y_train)\n","\n","y_pred = model1.predict(X_test)"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qYSUwH6ZcvKH","outputId":"40e05547-53f8-42f8-8937-f5f9b9caf9ab","executionInfo":{"status":"ok","timestamp":1720676792800,"user_tz":-330,"elapsed":3417,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.998777230715713\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00   1906362\n","           1       0.64      0.08      0.14      2420\n","\n","    accuracy                           1.00   1908782\n","   macro avg       0.82      0.54      0.57   1908782\n","weighted avg       1.00      1.00      1.00   1908782\n","\n"]}],"source":[" # Evaluate the model\n","\n","from sklearn.metrics import accuracy_score, classification_report\n","print(\"Accuracy Score:\", accuracy_score(y_test, y_pred))\n","print(classification_report(y_test, y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"9bykYhKSajLr","outputId":"f73b8863-c1b0-424f-c25e-9436fd635ca0"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'The confusion matrix will give you a better understanding of how well your model is performing in terms of true positives, \\n true negatives, false positives, and false negatives.'"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["#plot the confusion matrix\n","'''The confusion matrix will give you a better understanding of how well your model is performing in terms of true positives,\n"," true negatives, false positives, and false negatives.'''\n"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"PZ-76L6parmi","executionInfo":{"status":"ok","timestamp":1720677001762,"user_tz":-330,"elapsed":811,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"d8tTIaVPa1Uq","outputId":"94a9fa6b-659f-44ec-a4a4-8b69222cf8ec","executionInfo":{"status":"ok","timestamp":1720677005499,"user_tz":-330,"elapsed":1048,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":[" #Compute the confusion matrix\n","cm = confusion_matrix(y_test, y_pred, labels=model1.classes_)\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=model1.classes_)\n","\n","# Plot the confusion matrix\n","disp.plot(cmap=plt.cm.Blues)\n","plt.title('Confusion Matrix - Logistic Regression')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"yuxA3er8bGKD","outputId":"df794738-046e-4018-ca2f-67f1e66c5ace"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[1906256     106]\n"," [   2228     192]]\n"]}],"source":["print(cm)"]},{"cell_type":"markdown","metadata":{"id":"8dly_YPNb5yw"},"source":["*Here Fraud detection is a scenario where the cost of false negatives (missed frauds) can be very high.*"]},{"cell_type":"markdown","metadata":{"id":"jBufDJpAcUb5"},"source":["## **Using resampling on target varaible:SMOTE**\n","\n","> Add blockquote\n","\n"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"E37DTCLka1g3","executionInfo":{"status":"ok","timestamp":1720677019110,"user_tz":-330,"elapsed":2598,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["X_train, X_test, y_train, y_test = train_test_split(X_processed, y, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"OsICDT9eceo9","executionInfo":{"status":"ok","timestamp":1720677023386,"user_tz":-330,"elapsed":1092,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["from imblearn.over_sampling import SMOTE"]},{"cell_type":"code","execution_count":36,"metadata":{"id":"FPpa1JUyceyD","executionInfo":{"status":"ok","timestamp":1720677035716,"user_tz":-330,"elapsed":11485,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["smote = SMOTE(random_state=42)\n","X_train_balanced, y_train_balanced = smote.fit_resample(X_train, y_train)"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"_xxpyeUjce7M","outputId":"75057a3d-bc55-44f5-8c7f-4f7537cc46f3","executionInfo":{"status":"ok","timestamp":1720677072023,"user_tz":-330,"elapsed":32531,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(random_state=42)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":37}],"source":["model1_ = LogisticRegression(random_state=42)\n","model1_.fit(X_train_balanced, y_train_balanced)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"kWSPgs2qc9gZ","executionInfo":{"status":"ok","timestamp":1720677072025,"user_tz":-330,"elapsed":24,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[],"source":["y_pred = model1_.predict(X_test)"]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8EDFkyObc9p5","outputId":"9cd6e8e0-33af-4be4-dfd0-00e71c51dc20","executionInfo":{"status":"ok","timestamp":1720677162065,"user_tz":-330,"elapsed":3104,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.47054076121337096\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           0       1.00      0.47      0.64   1270934\n","           1       0.00      0.90      0.00      1587\n","\n","    accuracy                           0.47   1272521\n","   macro avg       0.50      0.68      0.32   1272521\n","weighted avg       1.00      0.47      0.64   1272521\n","\n"]}],"source":["print(\"Accuracy Score:\", accuracy_score(y_test, y_pred))\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JXPQYqDBdLgO","outputId":"61b0e714-91a5-42f8-f27b-96ff83e80c63","executionInfo":{"status":"ok","timestamp":1720677168715,"user_tz":-330,"elapsed":586,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n"," [[597350 673584]\n"," [   164   1423]]\n"]}],"source":["cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion Matrix:\\n\", cm)"]},{"cell_type":"markdown","metadata":{"id":"M5wj8plPd7op"},"source":["**2. RANDOMFOREST CLASSIFIER:**\n","- Good for handling imbalanced data due to its ability to model complex relationships."]},{"cell_type":"code","source":["from imblearn.ensemble import BalancedRandomForestClassifier\n","\n","# Initialize Balanced Random Forest\n","brf_model = BalancedRandomForestClassifier(n_estimators=50, max_depth=10, random_state=42)\n","\n","# Train the model\n","brf_model.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"waqKIOhIbX9G","executionInfo":{"status":"ok","timestamp":1720678665366,"user_tz":-330,"elapsed":93265,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}},"outputId":"756acb42-7e3f-49f7-cd8e-5d72b828eb13"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BalancedRandomForestClassifier(max_depth=10, n_estimators=50, random_state=42)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BalancedRandomForestClassifier(max_depth=10, n_estimators=50, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BalancedRandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>BalancedRandomForestClassifier(max_depth=10, n_estimators=50, random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["\n","# Make predictions and evaluate\n","y_pred_brf = brf_model.predict(X_test)\n","print(\"Accuracy Score:\", accuracy_score(y_test, y_pred_brf))\n","print(classification_report(y_test, y_pred_brf))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WrAQXe02b1wt","executionInfo":{"status":"ok","timestamp":1720678679381,"user_tz":-330,"elapsed":7686,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}},"outputId":"a6d51e68-f95e-4798-af7f-98d71a9b35a9"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.9113531328756068\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.91      0.95   1270934\n","           1       0.01      0.88      0.02      1587\n","\n","    accuracy                           0.91   1272521\n","   macro avg       0.51      0.89      0.49   1272521\n","weighted avg       1.00      0.91      0.95   1272521\n","\n"]}]},{"cell_type":"code","source":["conf_matrix = confusion_matrix(y_test, y_pred_brf)"],"metadata":{"id":"GaDmBpv1c6SZ","executionInfo":{"status":"ok","timestamp":1720678880900,"user_tz":-330,"elapsed":601,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["print(conf_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5EZfLxGCb2SD","executionInfo":{"status":"ok","timestamp":1720678899854,"user_tz":-330,"elapsed":645,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}},"outputId":"6ffb7c8f-0bb9-49e1-eab7-0a5c144a7c0a"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1158325  112609]\n"," [    196    1391]]\n"]}]},{"cell_type":"markdown","source":["***a good balance of precision and recall for the minority class (fraudulent transactions)***"],"metadata":{"id":"hQ2w1kNXdzME"}},{"cell_type":"markdown","source":["***XgBoost model :***"],"metadata":{"id":"FP_lmS85e1H4"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","import xgboost as xgb"],"metadata":{"id":"I0Hy21X7fCby","executionInfo":{"status":"ok","timestamp":1720679438422,"user_tz":-330,"elapsed":603,"user":{"displayName":"Pari JSPM","userId":"16697544503509364523"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["xgb_model = xgb.XGBClassifier(use_label_encoder=False, eval_metric='logloss')\n","\n","# Set up the parameter grid for hyperparameter tuning\n","param_grid = {\n","    'n_estimators': [100, 200],\n","    'learning_rate': [0.01, 0.1],\n","    'max_depth': [3, 5, 7],\n","    'subsample': [0.8, 1.0],\n","    'colsample_bytree': [0.8, 1.0]\n","}\n","\n","# Initialize GridSearchCV\n","grid_search = GridSearchCV(estimator=xgb_model, param_grid=param_grid, scoring='f1', cv=3, verbose=1, n_jobs=-1)\n","\n","# Fit the model\n","grid_search.fit(X_train_balanced, y_train_balanced)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9wUsWrumdFTz","outputId":"355567a0-a89d-4c8a-a70f-c669b8b3efe9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 48 candidates, totalling 144 fits\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"nC1vgQgqe7Rt"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[],"mount_file_id":"18mpZ4e1eP7oDOb7kVAjFurOwW5A7FShX","authorship_tag":"ABX9TyMLaoSr4nFZTofD1F1pWTQY"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}